import random
from io import BytesIO

import streamlit as st
from gtts import gTTS
from streamlit_mic_recorder import speech_to_text

# Set Streamlit app page configurations - Icon & URL Display
st.set_page_config(
        page_title="Hindi Bolo",
        page_icon="ЁЯжД"
    )

# Set Streamlit app Title
st.title("Hindi Pronunciation Practice")

# Dictionary of Hindi words categorized by topics
hindi_words_by_topic = {
    "Greetings": ["рдирдорд╕реНрддреЗ", "рдзрдиреНрдпрд╡рд╛рдж", "рд╢реБрднрдХрд╛рдордирд╛рдПрдВ", "рдЕрд▓рд╡рд┐рджрд╛", "рд╕реНрд╡рд╛рдЧрдд рд╣реИ", "рдЬрдиреНрдорджрд┐рди рдореБрдмрд╛рд░рдХ", "рдХреГрдкрдпрд╛"],
    "Family": ["рдорд╛рдБ", "рдкрд┐рддрд╛", "рднрд╛рдИ", "рдмрд╣рди", "рджрд╛рджреА", "рджрд╛рджрд╛", "рдирд╛рдиреА", "рдирд╛рдирд╛", "рдЪрд╛рдЪрд╛", "рдЪрд╛рдЪреА"],
    "Animals/Birds": ["рдХреБрддреНрддрд╛", "рдмрд┐рд▓реНрд▓реА", "рдЧрд╛рдп", "рдШреЛрдбрд╝рд╛", "рд╣рд╛рдереА", "рд╢реЗрд░", "рдореЛрд░", "рддреЛрддрд╛", "рдХреМрдЖ", "рдЪрд┐рдбрд╝рд┐рдпрд╛"],
    "Fruits/Vegetables": ["рд╕реЗрдм", "рдХреЗрд▓рд╛", "рдЖрдо", "рд╕рдВрддрд░рд╛", "рдЧрд╛рдЬрд░", "рдЯрдорд╛рдЯрд░", "рдЖрд▓реВ", "рдкреНрдпрд╛рдЬ", "рдордЯрд░", "рднрд┐рдВрдбреА"],
    "Actions": ["рдЦрд╛рдирд╛", "рдкреАрдирд╛", "рд╕реЛрдирд╛", "рдЙрдардирд╛", "рдЪрд▓рдирд╛", "рджреМрдбрд╝рдирд╛", "рдХреВрджрдирд╛", "рдмреИрдардирд╛", "рдкрдврд╝рдирд╛", "рд▓рд┐рдЦрдирд╛"],
    "Places": ["рд╕реНрдХреВрд▓", "рдШрд░", "рдмрд╛рдЬрд╛рд░", "рдкрд╛рд░реНрдХ", "рдордВрджрд┐рд░", "рдорд╕реНрдЬрд┐рдж", "рдЪрд░реНрдЪ", "рд╣реЙрд╕реНрдкрд┐рдЯрд▓", "рдкреБрд╕реНрддрдХрд╛рд▓рдп", "рдкрд╛рд░реНрдХ"],
    "Occupation": ["рдбреЙрдХреНрдЯрд░", "рдЕрдзреНрдпрд╛рдкрдХ", "рдЗрдВрдЬреАрдирд┐рдпрд░", "рдХрд┐рд╕рд╛рди", "рдкреБрд▓рд┐рд╕", "рдирд░реНрд╕", "рд╡рдХреАрд▓", "рджреБрдХрд╛рдирджрд╛рд░", "рдордЬрджреВрд░", "рд╕реИрдирд┐рдХ"],
    "Things": ["рдХрд┐рддрд╛рдм", "рдХрдВрдкреНрдпреВрдЯрд░", "рдХреБрд░реНрд╕реА", "рдЯреЗрдмрд▓", "рдкреЗрди", "рдкреЗрдВрд╕рд┐рд▓", "рдХрдк", "рдЧрд┐рд▓рд╛рд╕", "рдмреЛрддрд▓", "рдШрдбрд╝реА"],
    "Numbers": ["рдПрдХ", "рджреЛ", "рддреАрди", "рдЪрд╛рд░", "рдкрд╛рдБрдЪ", "рдЫрд╣", "рд╕рд╛рдд", "рдЖрда", "рдиреМ", "рджрд╕"],
    "Colors": ["рд▓рд╛рд▓", "рдиреАрд▓рд╛", "рд╣рд░рд╛", "рдкреАрд▓рд╛", "рдХрд╛рд▓рд╛", "рд╕рдлреЗрдж", "рдЧреБрд▓рд╛рдмреА", "рдмреИрдВрдЧрдиреА", "рднреВрд░рд╛", "рдирд╛рд░рдВрдЧреА"]
}

# Select a topic
selected_topic = st.selectbox("Select a Topic", list(hindi_words_by_topic.keys()), placeholder="Choose any one")

# Randomly select a word from the selected topic
target_word = random.choice(hindi_words_by_topic[selected_topic])

# Generate audio (speech) for the selected text
tts = gTTS(text=target_word, lang='hi')

# Convert gTTS object to byte stream
audio_bytes = BytesIO()
tts.write_to_fp(audio_bytes)
audio_bytes.seek(0)

# Play target pronunciation
st.write("Please listen carefully to this pronunciation :female-teacher:")
st.audio(audio_bytes, format='audio/mpeg')

# Apply CSS
st.markdown('''
<style>
    .stApp {
        background-color: #FFB6C1;
    }
    h1 {
        color: black;
    }
    div.stApp {
        color: black;
    }
</style>
''', unsafe_allow_html=True)

# Prompt response pronunciation
st.write("Now, record your pronunciation of what you heard :studio_microphone:")
recognized_word = speech_to_text(
    language='hi',
    start_prompt="Start recording",
    stop_prompt="Stop recording",
    just_once=False,
    use_container_width=True,  
    callback=None,
    args=(),
    kwargs={},
    key=None  # No unique key needed
)

# Perform comparison target vs response for feedback
if recognized_word:
    if recognized_word == target_word:
        st.text(f"Great job! You pronounced {recognized_word} correctly.")
        st.balloons()
    else:
        st.text("Hmm, that wasn't quite right. Let's try again.")